import sys
sys.stdin=open("input.txt","r")
dx=[-1,-1,-1,0,1,1,1,0]
dy=[-1,0,1,1,1,0,-1,-1]
def bfs(n,a,b,maps):
    q=list()
    q.append([a,b])
    maps[a][b]='x'
    while(q):
        x,y=q.pop(0)
        for i in range(8):
            nx = x+dx[i]
            ny = y+dy[i]
            if nx<0 or ny<0 or nx>=n or ny>=n : continue
            if maps[nx][ny]=='*' or maps[nx][ny]=='x': continue
            if maps[nx][ny]=='0':
                q.append([nx,ny])
            maps[nx][ny]='x'
def mine(n,maps):
    result=0
    for i in range(n):
        for j in range(n):
            cnt=0
            if maps[i][j]!='.': continue
            for k in range(8):
                x=i+dx[k]
                y=j+dy[k]
                if x<0 or y<0 or x>=n or y>=n : continue
                if maps[x][y]=='*': cnt+=1
            maps[i][j]=chr(cnt+48)
    for i in range(n):
        for j in range(n):
            if maps[i][j]!='0' : continue
            bfs(n,i,j,maps)
            result+=1
    for i in range(n):
        for j in range(n):
            if maps[i][j]=='x' or maps[i][j]=='*' : continue
            maps[i][j]=='x'
            result+=1
    return result
T=int(input())
for tc in range(1,T+1):
    n=int(input())
    maps=[list(input()) for _ in range(n)]
    result=mine(n,maps)
    print('#{} {}'.format(tc,result))